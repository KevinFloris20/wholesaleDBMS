<div class="ui inverted footer">
    <div class="ui container">
        DATA BASE MANAGEMENT - Wholesale Database Management System
    </div>
</div>

<script>

    // make charts for the reports
    function createBarChartTable1(data) {
        //checking so we dont get errors
        if(document.getElementById('myChart') === null) return;
        if(data.length === 0) return;

        //chart
        const chartLoc = document.getElementById('myChart');
        const ctx = chartLoc.getContext('2d');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(item => item.ProductName),
                datasets: [{
                    label: 'Inventory Level',
                    data: data.map(item => item.TotalUnits),
                    backgroundColor: 'rgba(0, 123, 255, 0.5)',
                    borderColor: 'rgba(0, 123, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    },
                    title: {
                        display: true,
                        text: 'Inventory Levels Per Unit'
                    }
                }
            }
        });
    }

    function createPieChart1(data) {
        //checking so we dont get errors
        if(document.getElementById('myPieChart') === null) return;
        if(data.length === 0) return;

        //chart
        const ctx = document.getElementById('myPieChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: data.map(item => item.SupplierName),
                datasets: [{
                    label: 'Supplier Contribution',
                    data: data.map(item => item.ProductCount),
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Weighted Supplier Stock Contribution'
                    }
                }
            }
        });
    }

    function createBarChartTable2(data) {
        //checking so we dont get errors
        if(document.getElementById('myChart2') === null) return;
        if(data.length === 0) return;

        //chart
        const ctx = document.getElementById('myChart2').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: data.map(item => item.CustomerName),
                datasets: [{
                    label: 'Accounts Receivable',
                    data: data.map(item => item.TotalReceivable),
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }, {
                    label: 'Defaulted Amount',
                    data: data.map(item => item.TotalDefaulted),
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true,
                    },
                    title: {
                        display: true,
                        text: 'Customer Receivables and Defaults'
                    }
                }
            }
        });
    }

    //actual main stuff
    document.addEventListener('DOMContentLoaded', function() {

        //show table1
        fetch('/inventory-chart')
            .then(response => response.json())
            .then(data => {
                createBarChartTable1(data);
            }).catch(error => console.error('Error:', error));

        //show piechart1
        fetch('/supplierWeight-chart')
            .then(response => response.json())
            .then(data => {
                createPieChart1(data);
            })
            .catch(error => console.error('Error:', error));

        //show table2
        fetch('/rec-and-def-chart')
            .then(response => response.json())
            .then(data => {
                createBarChartTable2(data);
            }).catch(error => console.error('Error:', error));

        //for the show sql button
        // this will show the sql queries that were used to generate the table for demo for all btns
        document.querySelectorAll('.showSqlButton').forEach(button => {
            if(button === null) return;
            button.addEventListener('click', function() {
                var targetId = this.getAttribute('data-target');
                var scrollableTable = document.getElementById(targetId);
                var sqlQueries = document.getElementById('sqlQueries' + targetId);

                if (scrollableTable.style.display === "none") {
                    this.innerText = "Show SQL";
                    scrollableTable.style.display = "block";
                    sqlQueries.style.display = "none";
                } else {
                    this.innerText = "Hide SQL";
                    scrollableTable.style.display = "none";
                    sqlQueries.style.display = "block";
                }
            });
        });

        //replacement contextmenu to delete a right clicked row
        var contextMenu = document.createElement("div");
        contextMenu.innerHTML = "<div><button class='ui segment' id='deleteRow'>Delete Row</button></div>";
        contextMenu.style.display = "none";
        contextMenu.style.position = "absolute";
        document.body.appendChild(contextMenu);

        //add the right clicking
        document.querySelectorAll('.ui.celled.table tbody tr').forEach(row => {
            if(row === null) return;
            row.addEventListener('contextmenu', function(e) {
                e.preventDefault();
                contextMenu.style.top = e.pageY + "px";
                contextMenu.style.left = e.pageX + "px";
                contextMenu.style.display = "block";
                contextMenu.rowElement = this;

                var closestTable = this.closest('.scrollable-table');
                contextMenu.tableName = closestTable.dataset.tableName;

                var columnHeader = closestTable.querySelector('.ui.celled.table thead tr th:first-child');
                contextMenu.columnName = columnHeader ? columnHeader.innerText : null;
            });
        });

        //delete opperations for delete
        document.getElementById('deleteRow').addEventListener('click', function() {
            var rowElement = contextMenu.rowElement;
            var rowId = rowElement.querySelector('td:first-child').innerText; 
            var tableName = contextMenu.tableName; 
            var columnName = contextMenu.columnName;

            //checking
            if (!rowId || !tableName || !columnName) {
                console.error('Error deleting row: Missing data');
                console.error('Row ID:', rowId);
                console.error('Table name:', tableName);
                console.error('Column name:', columnName);
                return;
            }

            //fetch opps, 
            fetch('/delete-row', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ tableName: tableName, rowId: rowId, columnName: columnName }),
            }).then(data => {
                console.log('Success:', data);
                if (data.status == 200) {
                    //relode the whole page
                    window.location.reload(true);
                } else {
                    console.error('Error deleting row:', data);
                }
            }).catch((error) => {
                console.error('Error:', error);
            });
            contextMenu.style.display = "none";
        });
        document.addEventListener('click', function(e) {
            if (e.target !== contextMenu) {
                contextMenu.style.display = "none";
            }
        });

        //for the dashbord and the customer list
        if(document.getElementById('customerSelect') !== null){
            document.getElementById('customerSelect').addEventListener('change', function() {
                var newCustomerFields = document.getElementById('newCustomerFields');
                if (this.value === 'new') {
                    newCustomerFields.style.display = 'block';
                } else {
                    newCustomerFields.style.display = 'none';
                }
            });
        }


        //dashboard tabbing for the very top header menu
        var menuItems = document.querySelectorAll('.menu .item');
        var tabSegments = document.querySelectorAll('.tab.segment');

        menuItems.forEach(function(tab) {
            if(tab.id === 'dash'){
                tab.addEventListener('click', function(event) {
                    event.preventDefault();
                    var activeTab = this.getAttribute('data-tab');
                    menuItems.forEach(item => item.classList.remove('active'));
                    tabSegments.forEach(segment => segment.classList.remove('active'));
                    this.classList.add('active');
                    document.querySelector('.tab.segment[data-tab="' + activeTab + '"]').classList.add('active');
                });
            }
        });
    

    });
</script>

